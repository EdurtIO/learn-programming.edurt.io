{"meta":{"title":"Learn Spring","subtitle":"Learn Spring","description":"Spring All","author":"edurtio","url":"https://learn-spring.incubator.edurt.io"},"pages":[{"title":"关于我们","date":"2020-05-08T02:40:39.788Z","updated":"2020-05-08T02:40:39.788Z","comments":true,"path":"about/index.html","permalink":"https://learn-spring.incubator.edurt.io/about/index.html","excerpt":"","text":"关于我们!!!"},{"title":"分类","date":"2020-05-08T02:40:39.788Z","updated":"2020-05-08T02:40:39.788Z","comments":true,"path":"categories/index.html","permalink":"https://learn-spring.incubator.edurt.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-05-08T02:40:39.789Z","updated":"2020-05-08T02:40:39.789Z","comments":true,"path":"tags/index.html","permalink":"https://learn-spring.incubator.edurt.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Spring DataJPA Redis教程(JPA实战版)","slug":"DataJPA/datajpa-redis-datajpa","date":"2020-05-31T05:12:07.000Z","updated":"2020-05-31T05:12:34.848Z","comments":true,"path":"2020/05/31/DataJPA/datajpa-redis-datajpa.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/31/DataJPA/datajpa-redis-datajpa.html","excerpt":"","text":"本教程主要详细讲解Spring Data Redis,它向Redis提供Spring Data平台的抽象. Redis由基于key/value库的数据结构存数，以持久保存数据，并可用作数据库，缓存，消息代理等。 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x Jedis 2.9.x 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slidra -DartifactId=spring-learn-integration-datajpa-redis-action -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加redis的支持 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-redis-action&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA Redis教程(DataJPA实战版)&lt;/name&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;redis.clients&lt;/groupId&gt; &lt;artifactId&gt;jedis&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.jedis.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.lettuce&lt;/groupId&gt; &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lettuce.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;plugin.maven.compiler.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;system.java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;system.java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; spring-boot-starter-data-redis整合Redis需要的依赖包,或者单独使用spring-data-redis和jedis依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPARedisActionIntegration &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPARedisActionIntegration &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:17 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPARedisActionIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPARedisActionIntegration.class, args); &#125;&#125; 配置支持Redis 在resources资源目录下创建一个application.properties的配置文件,内容如下 1234567spring.redis.host=localhostspring.redis.port=6379spring.redis.database=0spring.redis.jedis.pool.max-active=8spring.redis.jedis.pool.max-wait=1msspring.redis.lettuce.pool.max-active=8spring.redis.jedis.pool.min-idle=0 操作Redis数据 在/src/main/java/com/edurt/sli/slidra目录下创建model目录,并在该目录下新建RedisModel文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import org.springframework.data.annotation.Id;import org.springframework.data.redis.core.RedisHash;/** * &lt;p&gt; RedisModel &lt;/p&gt; * &lt;p&gt; Description : RedisModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:19 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RedisHash(value = \"Redis\")@Data@ToString@AllArgsConstructor@NoArgsConstructorpublic class RedisModel &#123; @Id private String id; private String name;&#125; @RedisHash为每个数据库创建域类的空子类。 @Id注解的属性和被命名为id的属性会被当作标识属性 在/src/main/java/com/edurt/sli/slidra目录下创建repository目录,并在该目录下新建RedisSupport文件 12345678910111213141516171819202122232425262728293031323334/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.repository;import com.edurt.sli.slidra.model.RedisModel;import org.springframework.data.repository.CrudRepository;import org.springframework.stereotype.Repository;/** * &lt;p&gt; RedisSupport &lt;/p&gt; * &lt;p&gt; Description : RedisSupport &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:20 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Repositorypublic interface RedisSupport extends CrudRepository&lt;RedisModel, String&gt; &#123;&#125; 在CrudRepository中提供了一些基础的增删改查的功能. 测试增删改查的功能 在/src/main/java/com/edurt/sli/slidra目录下创建controller目录,并在该目录下新建RedisController文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.controller;import com.edurt.sli.slidra.model.RedisModel;import com.edurt.sli.slidra.repository.RedisSupport;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; RedisController &lt;/p&gt; * &lt;p&gt; Description : RedisController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:21 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"redis\")public class RedisController &#123; @Autowired private RedisSupport support; @GetMapping public Object get() &#123; return this.support.findAll(); &#125; @PostMapping public Object post(@RequestBody RedisModel mode) &#123; return this.support.save(mode); &#125; @PutMapping public Object put(@RequestBody RedisModel mode) &#123; return this.support.save(mode); &#125; @DeleteMapping public Object delete(@RequestParam String id) &#123; this.support.deleteById(id); return \"SUCCESS\"; &#125;&#125; 测试基本的增删改查功能 Redis数据分页功能 修改RedisSupport文件将继承的CrudRepository修改为PagingAndSortingRepository 1234567891011121314151617181920212223242526272829303132333435/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.repository;import com.edurt.sli.slidra.model.RedisModel;import org.springframework.data.repository.PagingAndSortingRepository;import org.springframework.stereotype.Repository;/** * &lt;p&gt; RedisSupport &lt;/p&gt; * &lt;p&gt; Description : RedisSupport &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:20 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Repositorypublic interface RedisSupport extends PagingAndSortingRepository&lt;RedisModel, String&gt; &#123;&#125; 修改RedisController增加以下代码 12345@GetMapping(value = \"page\")public Object get(@RequestParam Integer page, @RequestParam Integer size) &#123; return this.support.findAll(PageRequest.of(page, size));&#125; 重启服务器测试分页功能 12&gt; $ curl -X GET 'http://localhost:8080/redis/page?page=0&amp;size=10'&#123;\"content\":[&#123;\"id\":\"1\",\"name\":\"Hello Redis\"&#125;],\"pageable\":&#123;\"sort\":&#123;\"sorted\":false,\"unsorted\":true&#125;,\"offset\":0,\"pageSize\":10,\"pageNumber\":0,\"unpaged\":false,\"paged\":true&#125;,\"last\":true,\"totalPages\":1,\"totalElements\":1,\"size\":10,\"number\":0,\"first\":true,\"numberOfElements\":1,\"sort\":&#123;\"sorted\":false,\"unsorted\":true&#125;&#125;% 由于jpa分页默认是从0开始,所以我们首页需要传递0 Redis数据清理 在DataJpa中我们设置对Redis数据清理只需要设置过期时间即可,可以分为两种方式设置(注意单位是按照秒计算) 全局数据模型过期时间设置 修改RedisModel,在RedisHash增加属性timeToLive 12345678910111213141516171819202122232425262728293031323334353637383940414243444546/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import org.springframework.data.annotation.Id;import org.springframework.data.redis.core.RedisHash;/** * &lt;p&gt; RedisModel &lt;/p&gt; * &lt;p&gt; Description : RedisModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:19 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RedisHash(value = \"Redis\", timeToLive = 60)@Data@ToString@AllArgsConstructor@NoArgsConstructorpublic class RedisModel &#123; @Id private String id; private String name;&#125; 重启服务器添加数据等待1分钟进行数据查询 对数据增加过期时间字段设置 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import org.springframework.data.annotation.Id;import org.springframework.data.redis.core.RedisHash;import org.springframework.data.redis.core.TimeToLive;import java.util.concurrent.TimeUnit;/** * &lt;p&gt; RedisModel &lt;/p&gt; * &lt;p&gt; Description : RedisModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 10:19 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RedisHash(value = \"Redis\")@Data@ToString@AllArgsConstructor@NoArgsConstructorpublic class RedisModel &#123; @Id private String id; private String name; @TimeToLive(unit = TimeUnit.SECONDS) private Long timeout;&#125; 注意: 使用RedisHash要注意数据过期后,jpa得分页查询会错误.redis数据过期,在redis底层是将数据删除的,因为在jpa工具中使用集成reids会做一层目录关系,这个关系是jpa维护的,但是数据清理过期是redis维护,完全两套隔离的,当redis清理数据后,并没有去清理jpa维护的关系,所以jpa中查询数据是有数据的,但是实际得详情数据已经被redis清理了,故关联不上返回的就是null,导致实际数据和jpa分页得数据不一致. 官方解释为: 将EXPIRE执行相应的命令。除了保留原始副本外，幻影副本还将保留在Redis中，并设置为在原始副本后五分钟到期。这样做是为了使存储库支持能够发布RedisKeyExpiredEvent，ApplicationEventPublisher只要密钥过期，即使原始值已被删除，Spring仍将过期值保存在Spring中。在使用Spring Data Redis存储库的所有已连接应用程序上都会收到到期事件。 使用监听事件解决数据过期分页问题 在/src/main/java/com/edurt/sli/slidra目录下创建config目录,并在该目录下新建RedisListenerConfig文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.config;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.data.redis.connection.RedisConnectionFactory;import org.springframework.data.redis.listener.RedisMessageListenerContainer;/** * &lt;p&gt; RedisListenerConfig &lt;/p&gt; * &lt;p&gt; Description : RedisListenerConfig &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 14:02 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Configurationpublic class RedisListenerConfig &#123; @Bean RedisMessageListenerContainer container(RedisConnectionFactory connectionFactory) &#123; RedisMessageListenerContainer container = new RedisMessageListenerContainer(); container.setConnectionFactory(connectionFactory);// container.addMessageListener(new RedisExpiredListener(), new PatternTopic(\"__keyevent@0__:expired\")); return container; &#125;&#125; 在config目录下新建RedisKeyExpirationListener监听文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidra.config;import com.edurt.sli.slidra.model.RedisModel;import com.edurt.sli.slidra.repository.RedisSupport;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.connection.Message;import org.springframework.data.redis.listener.KeyExpirationEventMessageListener;import org.springframework.data.redis.listener.RedisMessageListenerContainer;import org.springframework.stereotype.Component;/** * &lt;p&gt; RedisKeyExpirationListener &lt;/p&gt; * &lt;p&gt; Description : RedisKeyExpirationListener &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-05 12:05 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Componentpublic class RedisKeyExpirationListener extends KeyExpirationEventMessageListener &#123; @Autowired private RedisSupport support; public RedisKeyExpirationListener(RedisMessageListenerContainer listenerContainer) &#123; super(listenerContainer); &#125; /** * 针对redis数据失效事件，进行数据处理 * * @param message message.toString()获取失效的key * @param pattern */ @Override public void onMessage(Message message, byte[] pattern) &#123; String expiredKey = message.toString(); // 获得key之后可以做数据删除操作 // expiredKey格式为value:key &#125;&#125; 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar target/spring-learn-integration-datajpa-redis-action-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"Redis","slug":"Redis","permalink":"https://learn-spring.incubator.edurt.io/tags/Redis/"}]},{"title":"Spring DataJPA Redis教程(Template版)","slug":"DataJPA/datajpa-redis-template","date":"2020-05-31T05:10:19.000Z","updated":"2020-05-31T05:11:12.540Z","comments":true,"path":"2020/05/31/DataJPA/datajpa-redis-template.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/31/DataJPA/datajpa-redis-template.html","excerpt":"","text":"本教程主要详细讲解Spring Data Redis,它向Redis提供Spring Data平台的抽象. Redis由基于key/value库的数据结构存数，以持久保存数据，并可用作数据库，缓存，消息代理等。 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x Jedis 2.9.x 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slidrt -DartifactId=spring-learn-integration-datajpa-redis-template -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加redis的支持 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-redis-template&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA Redis教程(Template版)&lt;/name&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.data&lt;/groupId&gt; &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.spring.data.jpa.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;redis.clients&lt;/groupId&gt; &lt;artifactId&gt;jedis&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.jedis.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;plugin.maven.compiler.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;system.java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;system.java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; spring-data-redis整合Redis需要的依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidrt;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPARedisTemplateIntegration &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPARedisTemplateIntegration &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 14:24 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPARedisTemplateIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPARedisTemplateIntegration.class, args); &#125;&#125; 配置支持Redis 在/src/main/java/com/edurt/sli/slidr目录下创建config目录,并在该目录下新建RedisConfig文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidrt.config;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.data.redis.connection.RedisStandaloneConfiguration;import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;import org.springframework.data.redis.core.StringRedisTemplate;import org.springframework.stereotype.Component;/** * &lt;p&gt; RedisConfig &lt;/p&gt; * &lt;p&gt; Description : RedisConfig &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 14:26 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Component@Configuration@ConfigurationProperties(prefix = \"custom.redis\")@Data@AllArgsConstructor@NoArgsConstructorpublic class RedisConfig &#123; private String server; // redis服务器地址 private Integer port; // redis服务器地址 @Qualifier(value = \"redisTemplate\") @Bean public StringRedisTemplate redisTemplate() &#123; StringRedisTemplate template = new StringRedisTemplate(); JedisConnectionFactory factory = jedisConnectionFactory(); template.setConnectionFactory(factory); return template; &#125; @Bean public JedisConnectionFactory jedisConnectionFactory() &#123; JedisConnectionFactory factory = new JedisConnectionFactory(new RedisStandaloneConfiguration(server, port)); factory.afterPropertiesSet(); return factory; &#125;&#125; 在resources资源目录下创建一个application.properties的配置文件,内容如下 12custom.redis.server=localhostcustom.redis.port=6379 操作Redis数据 在/src/main/java/com/edurt/sli/slidrt目录下创建model目录,并在该目录下新建RedisTemplateModel文件 123456789101112131415161718192021222324252627282930313233343536373839404142/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidrt.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;/** * &lt;p&gt; RedisTemplateModel &lt;/p&gt; * &lt;p&gt; Description : RedisTemplateModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 14:35 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Data@ToString@AllArgsConstructor@NoArgsConstructorpublic class RedisTemplateModel &#123; private String id; private String name;&#125; 测试增删改查的功能 在/src/main/java/com/edurt/sli/slidrt目录下创建controller目录,并在该目录下新建RedisTemplateController文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidrt.controller;import com.edurt.sli.slidrt.model.RedisTemplateModel;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.StringRedisTemplate;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; RedisTemplateController &lt;/p&gt; * &lt;p&gt; Description : RedisTemplateController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 14:38 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"redis/template\")public class RedisTemplateController &#123; @Autowired private StringRedisTemplate stringRedisTemplate; private static String KEY = \"RedisTemplate\"; @GetMapping public Object get() &#123; return this.stringRedisTemplate.opsForHash().entries(KEY); &#125; @PostMapping public Object post(@RequestBody RedisTemplateModel model) &#123; this.stringRedisTemplate.opsForHash().put(KEY, model.getId(), model.getName()); return \"SUCCESS\"; &#125; @PutMapping public Object put(@RequestBody RedisTemplateModel model) &#123; this.stringRedisTemplate.opsForHash().put(KEY, model.getId(), model.getName()); return \"SUCCESS\"; &#125; @DeleteMapping public Object delete(@RequestParam String id) &#123; this.stringRedisTemplate.opsForHash().delete(KEY, id); return \"SUCCESS\"; &#125;&#125; 添加数据 12shicheng@localhost ~&gt; curl -X POST http://localhost:8080/redis/template -H 'Content-Type:application/json' -d '&#123;\"id\": \"1\", \"name\": \"Hello Redis\"&#125;'SUCCESS⏎ 修改数据 12shicheng@localhost ~&gt; curl -X PUT http://localhost:8080/redis/template -H 'Content-Type:application/json' -d '&#123;\"id\": \"1\", \"name\": \"Hello Redis Modfiy\"&#125;'SUCCESS⏎ 获取数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X GET http://localhost:8080/redis/template[&#123;\"id\":\"1\",\"name\":\"Hello Redis Modfiy\"&#125;]⏎ 删除数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X DELETE 'http://localhost:8080/redis/template?id=1'SUCCESS⏎ 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar spring-learn-integration-datajpa/spring-learn-integration-datajpa-redis-template/target/spring-learn-integration-datajpa-redis-template-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"Redis","slug":"Redis","permalink":"https://learn-spring.incubator.edurt.io/tags/Redis/"}]},{"title":"Spring DataJPA Redis教程(基础版)","slug":"DataJPA/datajpa-redis-basic","date":"2020-05-31T05:09:15.000Z","updated":"2020-05-31T05:10:08.386Z","comments":true,"path":"2020/05/31/DataJPA/datajpa-redis-basic.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/31/DataJPA/datajpa-redis-basic.html","excerpt":"","text":"本教程主要详细讲解Spring Data Redis,它向Redis提供Spring Data平台的抽象. Redis由基于key/value库的数据结构存数，以持久保存数据，并可用作数据库，缓存，消息代理等。 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x Jedis 2.9.x 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slidr -DartifactId=spring-learn-integration-datajpa-redis -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加redis的支持 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-redis&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA Redis教程(基础版)&lt;/name&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;redis.clients&lt;/groupId&gt; &lt;artifactId&gt;jedis&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.jedis.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.lettuce&lt;/groupId&gt; &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lettuce.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;plugin.maven.compiler.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;system.java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;system.java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; spring-boot-starter-data-redis整合Redis需要的依赖包,或者单独使用spring-data-redis和jedis依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidr;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPARedisIntegration &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPARedisIntegration &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 00:44 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPARedisIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPARedisIntegration.class, args); &#125;&#125; 配置支持Redis 在resources资源目录下创建一个application.properties的配置文件,内容如下 1234567spring.redis.host=localhostspring.redis.port=6379spring.redis.database=0spring.redis.jedis.pool.max-active=8spring.redis.jedis.pool.max-wait=1msspring.redis.lettuce.pool.max-active=8spring.redis.jedis.pool.min-idle=0 操作Redis数据 在/src/main/java/com/edurt/sli/slidr目录下创建model目录,并在该目录下新建RedisModel文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidr.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import org.springframework.data.annotation.Id;import org.springframework.data.redis.core.RedisHash;/** * &lt;p&gt; RedisModel &lt;/p&gt; * &lt;p&gt; Description : RedisModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 01:06 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RedisHash(value = \"Redis\")@Data@ToString@AllArgsConstructor@NoArgsConstructorpublic class RedisModel &#123; @Id private String id; private String name;&#125; @RedisHash为每个数据库创建域类的空子类。 @Id注解的属性和被命名为id的属性会被当作标识属性 在/src/main/java/com/edurt/sli/slidr目录下创建repository目录,并在该目录下新建RedisSupport文件 12345678910111213141516171819202122232425262728293031323334/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidr.repository;import com.edurt.sli.slidr.model.RedisModel;import org.springframework.data.repository.CrudRepository;import org.springframework.stereotype.Repository;/** * &lt;p&gt; RedisSupport &lt;/p&gt; * &lt;p&gt; Description : RedisSupport &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 00:59 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Repositorypublic interface RedisSupport extends CrudRepository&lt;RedisModel, String&gt; &#123;&#125; 在CrudRepository中提供了一些基础的增删改查的功能. 测试增删改查的功能 在/src/main/java/com/edurt/sli/slidr目录下创建controller目录,并在该目录下新建RedisController文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidr.controller;import com.edurt.sli.slidr.model.RedisModel;import com.edurt.sli.slidr.repository.RedisSupport;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; RedisController &lt;/p&gt; * &lt;p&gt; Description : RedisController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-06-14 01:05 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"redis\")public class RedisController &#123; @Autowired private RedisSupport support; @GetMapping public Object get() &#123; return this.support.findAll(); &#125; @PostMapping public Object post(@RequestBody RedisModel mode) &#123; return this.support.save(mode); &#125; @PutMapping public Object put(@RequestBody RedisModel mode) &#123; return this.support.save(mode); &#125; @DeleteMapping public Object delete(@RequestParam String id) &#123; this.support.deleteById(id); return \"SUCCESS\"; &#125;&#125; 添加数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X POST http://localhost:8080/redis -H 'Content-Type:application/json' -d '&#123;\"id\": \"1\", \"name\": \"Hello Redis\"&#125;'&#123;\"id\":\"1\",\"name\":\"Hello Redis\"&#125;⏎ 修改数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X PUT http://localhost:8080/redis -H 'Content-Type:application/json' -d '&#123;\"id\": \"1\", \"name\": \"Hello Redis Modfiy\"&#125;'&#123;\"id\":\"1\",\"name\":\"Hello Redis Modfiy\"&#125;⏎ 获取数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X GET http://localhost:8080/redis[&#123;\"id\":\"1\",\"name\":\"Hello Redis Modfiy\"&#125;]⏎ 删除数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X DELETE 'http://localhost:8080/redis?id=1'SUCCESS⏎ 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar target/spring-learn-integration-datajpa-redis-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"Redis","slug":"Redis","permalink":"https://learn-spring.incubator.edurt.io/tags/Redis/"}]},{"title":"Spring DataJPA MongoDB Template教程","slug":"DataJPA/datajpa-mongodb-template","date":"2020-05-09T07:39:43.000Z","updated":"2020-05-09T11:11:02.364Z","comments":true,"path":"2020/05/09/DataJPA/datajpa-mongodb-template.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/09/DataJPA/datajpa-mongodb-template.html","excerpt":"","text":"本教程主要详细讲解Spring Data MongoDB,它向MongoDB提供Spring Data平台的抽象. MongoDB是基于文档的存储,以持久保存数据,并可用作数据库,缓存,消息代理等. 我们通过以下几个步骤进行讲解: 基础环境 创建项目 配置支持MongoDB 操作JDBC数据 操作MongoDB数据 打包文件部署 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x MongoDB 3.6.3-cmongo- 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slidmt -DartifactId=spring-learn-integration-datajpa-mongodb-template -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加mongodb的支持 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-mongodb-template&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA MongoDB教程(Template版)&lt;/name&gt; &lt;properties&gt; &lt;spring.data.mongodb.version&gt;2.2.0.RELEASE&lt;/spring.data.mongodb.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.data&lt;/groupId&gt; &lt;artifactId&gt;spring-data-mongodb&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.data.mongodb.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;plugin.maven.compiler.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;system.java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;system.java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; spring-data-mongodb整合MongoDB需要的依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidmt;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPAMongoDBTemplateIntegration &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPAMongoDBTemplateIntegration &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-21 11:26 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPAMongoDBTemplateIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPAMongoDBTemplateIntegration.class, args); &#125;&#125; 配置支持MongoDB 在/src/main/java/com/edurt/sli/slidmt目录下创建config目录,并在该目录下新建MongoDBConfig文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidmt.config;import com.mongodb.MongoClient;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.data.mongodb.core.MongoTemplate;import org.springframework.stereotype.Component;/** * &lt;p&gt; MongoDBConfig &lt;/p&gt; * &lt;p&gt; Description : MongoDBConfig &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-21 11:28 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Component@Configuration@ConfigurationProperties(prefix = \"custom.mongodb\")@Data@AllArgsConstructor@NoArgsConstructorpublic class MongoDBConfig &#123; private String server; // mongodb服务器地址 private Integer port; // mongodb服务器地址端口 private String database; // mongodb访问的数据库 @Bean public MongoClient mongoClient() &#123; return new MongoClient(server, port); &#125; @Bean public MongoTemplate mongoTemplate() &#123; return new MongoTemplate(mongoClient(), database); &#125;&#125; 在resources资源目录下创建一个application.properties的配置文件,内容如下 123custom.mongodb.server=localhostcustom.mongodb.port=27017custom.mongodb.database=test 操作MongoDB数据 在/src/main/java/com/edurt/sli/slidmt目录下创建model目录,并在该目录下新建MongoDBModel文件 12345678910111213141516171819202122232425262728293031323334353637383940414243/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidmt.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;/** * &lt;p&gt; MongoDBModel &lt;/p&gt; * &lt;p&gt; Description : MongoDBModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-21 11:42 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Data@ToString@AllArgsConstructor@NoArgsConstructorpublic class MongoDBModel &#123; private String id; private String title; private String context;&#125; 测试增删改查的功能 在/src/main/java/com/edurt/sli/slidmt目录下创建controller目录,并在该目录下新建MongoDbController文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidmt.controller;import com.edurt.sli.slidmt.model.MongoDBModel;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.mongodb.core.MongoTemplate;import org.springframework.data.mongodb.core.query.Criteria;import org.springframework.data.mongodb.core.query.Query;import org.springframework.data.mongodb.core.query.Update;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; MongoDbController &lt;/p&gt; * &lt;p&gt; Description : MongoDbController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-21 11:44 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"mongodb/template\")public class MongoDbController &#123; @Autowired private MongoTemplate mongoTemplate; @GetMapping public Object get() &#123; return this.mongoTemplate.findOne(Query.query(Criteria.where(\"title\").is(\"Hello MongoDB\")), MongoDBModel.class); &#125; @PostMapping public Object post(@RequestBody MongoDBModel model) &#123; return this.mongoTemplate.save(model); &#125; @PutMapping public Object put(@RequestBody MongoDBModel model) &#123; Query query = new Query(Criteria.where(\"title\").is(\"Hello MongoDB\")); Update update = new Update().set(\"title\", model.getTitle()); return this.mongoTemplate.findAndModify(query, update, MongoDBModel.class); &#125; @DeleteMapping public Object delete(@RequestParam String id) &#123; return this.mongoTemplate.remove(Query.query(Criteria.where(\"id\").is(id))); &#125;&#125; 添加数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X POST http://localhost:8080/mongodb/template -H 'Content-Type:application/json' -d '&#123;\"title\": \"HelloMongoDB\", \"context\": \"我是SpringBoot整合MongoDB示例\"&#125;'&#123;\"id\":\"5dad2d4ea479fc579f298545\",\"title\":\"HelloMongoDB\",\"context\":\"我是SpringBoot整合MongoDB示例\"&#125;⏎ 修改数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X PUT http://localhost:8080/mongodb/template -H 'Content-Type:application/json' -d '&#123;\"title\": \"HelloMongoDBModfiy\", \"context\": \"我是SpringBoot整合MongoDB示例\"&#125;'&#123;\"id\":\"5dad2d4ea479fc579f298545\",\"title\":\"HelloMongoDBModfiy\",\"context\":\"我是SpringBoot整合MongoDB示例\"&#125;⏎ 获取数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X GET http://localhost:8080/mongodb/template&#123;\"id\":\"5dad2d4ea479fc579f298545\",\"title\":\"HelloMongoDBModfiy\",\"context\":\"我是SpringBoot整合MongoDB示例\"&#125;⏎ 删除数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X DELETE 'http://localhost:8080/mongodb/template?title=HelloMongoDB'SUCCESS⏎ 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar target/spring-learn-integration-datajpa-mongodb-template-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"MongoDB","slug":"MongoDB","permalink":"https://learn-spring.incubator.edurt.io/tags/MongoDB/"}]},{"title":"Spring DataJPA MongoDB教程(基础版)","slug":"DataJPA/datajpa-mongodb-basic","date":"2020-05-08T06:42:05.000Z","updated":"2020-05-08T06:51:51.288Z","comments":true,"path":"2020/05/08/DataJPA/datajpa-mongodb-basic.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/08/DataJPA/datajpa-mongodb-basic.html","excerpt":"","text":"本教程主要详细讲解Spring Data MongoDB,它向MongoDB提供Spring Data平台的抽象. MongoDB是基于文档的存储,以持久保存数据,并可用作数据库,缓存,消息代理等. 我们通过以下几个步骤进行讲解: 基础环境 创建项目 配置支持MongoDB 操作JDBC数据 操作MongoDB数据 打包文件部署 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x MongoDB 3.6.3-cmongo- 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slidm -DartifactId=spring-learn-integration-datajpa-mongodb -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加mongodb的支持 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-mongodb&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA MongoDB教程(基础版)&lt;/name&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;plugin.maven.compiler.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;system.java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;system.java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; spring-boot-starter-data-mongodb整合MongoDB需要的依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidm;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPAMongoDBIntegration &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPAMongoDBIntegration &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-18 10:44 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPAMongoDBIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPAMongoDBIntegration.class, args); &#125; &#125; 配置支持MongoDB 在resources资源目录下创建一个application.properties的配置文件,内容如下 123spring.data.mongodb.host=10.100.10.4spring.data.mongodb.port=27017spring.data.mongodb.database=test 操作MongoDB数据 在/src/main/java/com/edurt/sli/slidm目录下创建model目录,并在该目录下新建MongoDBModel文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidm.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import org.springframework.data.annotation.Id;import org.springframework.data.mongodb.core.mapping.Document;/** * &lt;p&gt; MongoDBModel &lt;/p&gt; * &lt;p&gt; Description : MongoDBModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-18 10:51 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Data@ToString@AllArgsConstructor@NoArgsConstructor@Documentpublic class MongoDBModel &#123; @Id private String id; private String title; private String context;&#125; @Document相当于Hibernate实体的@Entity/@Table(必写) @Id相当于Hibernate实体的主键@Id注解(必写) 在/src/main/java/com/edurt/sli/slidm目录下创建repository目录,并在该目录下新建MongoDBSupport文件 123456789101112131415161718192021222324252627282930313233package com.edurt.sli.slidm.repository; /** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */import com.edurt.sli.slidm.model.MongoDBModel;import org.springframework.data.mongodb.repository.MongoRepository;import org.springframework.stereotype.Repository;/** * &lt;p&gt; MongoDBSupport &lt;/p&gt; * &lt;p&gt; Description : MongoDBSupport &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-18 10:54 &lt;/p&gt; * &lt;p&gt; Author Eamil: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Repositorypublic interface MongoDBSupport extends MongoRepository&lt;MongoDBModel, String&gt; &#123;&#125; 在MongoRepository中提供了一些基础的增删改查以及分页的功能. 测试增删改查的功能 在/src/main/java/com/edurt/sli/slidm目录下创建controller目录,并在该目录下新建MongoDbController文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidm.controller;import com.edurt.sli.slidm.model.MongoDBModel;import com.edurt.sli.slidm.repository.MongoDBSupport;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; MongoDbController &lt;/p&gt; * &lt;p&gt; Description : MongoDbController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-10-18 10:57 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"mongodb\")public class MongoDbController &#123; @Autowired private MongoDBSupport support; @GetMapping public Object get() &#123; return this.support.findAll(); &#125; @PostMapping public Object post(@RequestBody MongoDBModel mode) &#123; return this.support.save(mode); &#125; @PutMapping public Object put(@RequestBody MongoDBModel mode) &#123; return this.support.save(mode); &#125; @DeleteMapping public Object delete(@RequestParam String id) &#123; this.support.deleteById(id); return \"SUCCESS\"; &#125;&#125; 添加数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X POST http://localhost:8080/mongodb -H 'Content-Type:application/json' -d '&#123;\"title\": \"Hello MongoDB\", \"context\": \"我是SpringBoot整合MongoDB示例\"&#125;'&#123;\"id\":null,\"title\":\"Hello MongoDB\",\"context\":\"我是SpringBoot整合MongoDB示例\"&#125;⏎ 修改数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X PUT http://localhost:8080/mongodb -H 'Content-Type:application/json' -d '&#123;\"id\": 1,\"title\": \"Hello MongoDB\", \"context\": \"我是SpringBoot整合MongoDB示例,Modfiy\"&#125;'&#123;\"id\":1,\"title\":\"Hello MongoDB\",\"context\":\"我是SpringBoot整合MongoDB示例,Modfiy\"&#125;⏎ 获取数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X GET http://localhost:8080/mongodb&#123;\"content\":[&#123;\"id\":null,\"title\":\"Hello MongoDB\",\"context\":\"我是SpringBoot整合MongoDB示例,Modfiy\"&#125;,&#123;\"id\":1,\"title\":\"Hello MongoDB\",\"context\":\"我是SpringBoot整合MongoDB示例,Modfiy\"&#125;],\"pageable\":&#123;\"sort\":&#123;\"sorted\":false,\"unsorted\":true&#125;,\"offset\":0,\"pageSize\":2,\"pageNumber\":0,\"paged\":true,\"unpaged\":false&#125;,\"facets\":[],\"aggregations\":null,\"scrollId\":null,\"totalElements\":2,\"totalPages\":1,\"size\":2,\"number\":0,\"numberOfElements\":2,\"first\":true,\"sort\":&#123;\"sorted\":false,\"unsorted\":true&#125;,\"last\":true&#125;⏎ 删除数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X DELETE 'http://localhost:8080/mongodb?id=1'SUCCESS⏎ 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar target/spring-learn-integration-datajpa-mongodb-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"MongoDB","slug":"MongoDB","permalink":"https://learn-spring.incubator.edurt.io/tags/MongoDB/"}]},{"title":"Spring DataJPA JDBC教程(基础版)","slug":"DataJPA/datajpa-jdbc-basic","date":"2020-05-08T06:38:26.000Z","updated":"2020-05-08T06:51:51.286Z","comments":true,"path":"2020/05/08/DataJPA/datajpa-jdbc-basic.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/08/DataJPA/datajpa-jdbc-basic.html","excerpt":"","text":"本教程主要详细讲解SpringBoot整合JPA进行JDBC对数据库的各种操作. 我们通过以下几个步骤进行讲解: 基础环境 创建项目 配置支持JDBC 操作JDBC数据 JDBC数据分页功能 JDBC数据排序功能 JDBC数据排序分页组合功能 自动创建SQL 打印SQL日志 打包文件部署 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x MySQL 5.x.x 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slidj -DartifactId=spring-learn-integration-datajpa-jdbc -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加jdbc的支持 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-jdbc&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA JDBC教程(基础版)&lt;/name&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.mysql.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; spring-boot-starter-data-jpa整合JDBC需要的依赖包 mysql-connector-java整合JDBC需要连接MySQL依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidj;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPAJDBC &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPAJDBC &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-13 20:23 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPAJDBCIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPAJDBCIntegration.class, args); &#125;&#125; 配置支持JDBC 在resources资源目录下创建一个application.properties的配置文件,内容如下 1234spring.datasource.driver-class-name=com.mysql.jdbc.Driverspring.datasource.url=jdbc:mysql://localhost:3306/test?charset=utf8mb4&amp;useSSL=falsespring.datasource.username=rootspring.datasource.password=123456 操作JDBC数据 在/src/main/java/com/edurt/sli/slidj目录下创建model目录,并在该目录下新建JDBCModel文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidj.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import javax.persistence.*;/** * &lt;p&gt; JDBCModel &lt;/p&gt; * &lt;p&gt; Description : JDBCModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-13 20:39 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Data@ToString@AllArgsConstructor@NoArgsConstructor@Entity@Table(name = \"jdbc\")public class JDBCModel &#123; @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @Column(name = \"id\") private Long id; private String name; @Column(length = 64) private String context;&#125; @Entity必选的注解，声明这个类对应了一个数据库表 @Table 可选的注解.声明了数据库实体对应的表信息.包括表名称、索引信息等,如果没有指定,则表名和实体的名称保持一致 @Id注解的属性和被命名为id的属性会被当作标识属性 @Column声明实体属性的表字段的定义.默认的实体每个属性都对应了表的一个字段.字段的名称默认和属性名称保持一致(并不一定相等).字段的类型根据实体属性类型自动推断.如果不这么声明,则系统会采用 255 作为该字段的长度 在/src/main/java/com/edurt/sli/slidj目录下创建repository目录,并在该目录下新建JDBCSupport文件 12345678910111213141516171819202122232425262728293031323334/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidj.repository;import com.edurt.sli.slidj.model.JDBCModel;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.stereotype.Repository;/** * &lt;p&gt; JDBCSupport &lt;/p&gt; * &lt;p&gt; Description : JDBCSupport &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-13 20:45 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Repositorypublic interface JDBCSupport extends JpaRepository&lt;JDBCModel, Long&gt; &#123;&#125; 在JpaRepository中提供了一些基础的增删改查的功能以及分页等 测试增删改查的功能 在/src/main/java/com/edurt/sli/slidj目录下创建controller目录,并在该目录下新建JDBCController文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slidj.controller;import com.edurt.sli.slidj.model.JDBCModel;import com.edurt.sli.slidj.repository.JDBCSupport;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; JDBCController &lt;/p&gt; * &lt;p&gt; Description : JDBCController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-11-13 20:47 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"jdbc\")public class JDBCController &#123; @Autowired private JDBCSupport support; @GetMapping public Object get() &#123; return this.support.findAll(); &#125; @PostMapping public Object post(@RequestBody JDBCModel mode) &#123; return this.support.save(mode); &#125; @PutMapping public Object put(@RequestBody JDBCModel mode) &#123; return this.support.save(mode); &#125; @DeleteMapping public Object delete(@RequestParam Long id) &#123; this.support.deleteById(id); return \"SUCCESS\"; &#125;&#125; 启动服务使用curl或者其他http客户端进行测试基本的增删改查功能 JDBC数据分页功能 由于JDBCSupport文件将继承的JpaRepository接口,而JpaRepository底层继承PagingAndSortingRepository接口,所以我们的接口会自动提供分页功能,只需要在查询的时候增加分页配置即可 修改JDBCController增加以下代码 12345@GetMapping(value = \"page\")public Object get(@RequestParam Integer page, @RequestParam Integer size) &#123; return this.support.findAll(PageRequest.of(page, size));&#125; 重启服务器测试分页功能 注意:由于jpa分页默认是从0开始,所以我们首页需要传递0 JDBC数据排序功能 在JPA中对查询数据排序和分页一样简单,我们只需要传递排序配置即可 修改JDBCController增加以下代码 1234@GetMapping(value = \"sort\")public Object sort() &#123; return this.support.findAll(new Sort(Sort.Direction.DESC, \"id\"));&#125; 需要注意的是sort中的排序字段是我们实体类中的字段,并不是数据库中的字段 JDBC数据排序分页组合功能 我们已经实现分页和排序功能,那么我们需要讲解一下如何做组合,代码也很简单,具体代码如下 修改JDBCController增加以下代码 123456@GetMapping(value = \"page_sort\")public Object sort(@RequestParam Integer page, @RequestParam Integer size) &#123; Pageable pageable = PageRequest.of(page, size, new Sort(Sort.Direction.DESC, \"id\")); return this.support.findAll(pageable);&#125; 代码中我们看到只需要在构建Pageable过程中传递Sort配置即可 自动创建SQL JPA提供自动创建SQL功能只需要在application.properties配置文件中加入以下配置 1spring.jpa.hibernate.ddl-auto=create 重启服务后,会自动创建数据表可用参数如下: validate 加载 Hibernate 时，验证创建数据库表结构 create 每次加载 Hibernate ，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。 create-drop 加载 Hibernate 时创建，退出是删除表结构 update 加载 Hibernate 自动更新数据库结构 如果你想保留表结构的数据,使用 update 即可 打印SQL日志 在调试程序中我们需要查看出现问题的sql,那么我们需要在application.properties配置文件中加入以下配置 1spring.jpa.show-sql=true 此时重启服务器.控制台会打印如下sql 12Hibernate: drop table if exists jdbcHibernate: create table jdbc (id bigint not null auto_increment, context varchar(64), name varchar(255), primary key (id)) engine=MyISAM 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar target/spring-learn-integration-datajpa-jdbc-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"JDBC","slug":"JDBC","permalink":"https://learn-spring.incubator.edurt.io/tags/JDBC/"}]},{"title":"Spring DataJPA ElasticSearch教程(基础版)","slug":"DataJPA/datajpa-elasticsearch-basic","date":"2020-05-07T15:46:05.000Z","updated":"2020-05-08T06:51:51.280Z","comments":true,"path":"2020/05/07/DataJPA/datajpa-elasticsearch-basic.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/07/DataJPA/datajpa-elasticsearch-basic.html","excerpt":"","text":"本教程主要详细讲解Spring Data ElasticSearch,它向ElasticSearch提供Spring Data平台的抽象. ElasticSearch是基于文档的存储,以持久保存数据,并可用作数据库,缓存,消息代理等. 我们通过以下几个步骤进行讲解: 基础环境 创建项目 配置支持ElasticSearch 操作ElasticSearch数据 打包文件部署 基础环境 技术 版本 Java 1.8+ SpringBoot 2.x.x DataJPA 2.x.x ElasticSearch 5.x.x 创建项目 初始化项目 1mvn archetype:generate -DgroupId=com.edurt.sli.slide -DartifactId=spring-learn-integration-datajpa-elasticsearch -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0.0 -DinteractiveMode=false 修改pom.xml增加elasticsearch的支持 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;spring-learn-integration-datajpa&lt;/artifactId&gt; &lt;groupId&gt;com.edurt.sli&lt;/groupId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;artifactId&gt;spring-learn-integration-datajpa-elasticsearch&lt;/artifactId&gt; &lt;name&gt;Spring DataJPA ElasticSearch教程(基础版)&lt;/name&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.lombok.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-elasticsearch&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;dependency.springboot2.common.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;plugin.maven.compiler.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;system.java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;system.java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; spring-boot-starter-data-elasticsearch整合ElasticSearch需要的依赖包 一个简单的应用类 1234567891011121314151617181920212223242526272829303132333435363738/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slide;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * &lt;p&gt; SpringBootDataJPAElasticSearchIntegration &lt;/p&gt; * &lt;p&gt; Description : SpringBootDataJPAElasticSearchIntegration &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-07-25 10:24 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@SpringBootApplicationpublic class SpringBootDataJPAElasticSearchIntegration &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootDataJPAElasticSearchIntegration.class, args); &#125;&#125; 配置支持ElasticSearch 在resources资源目录下创建一个application.properties的配置文件,内容如下 12spring.data.elasticsearch.cluster-name=esspring.data.elasticsearch.cluster-nodes=10.10.0.17:9300 操作ElasticSearch数据 在/src/main/java/com/edurt/sli/slide目录下创建model目录,并在该目录下新建ElasticSearchModel文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slide.model;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import lombok.ToString;import org.springframework.data.annotation.Id;import org.springframework.data.elasticsearch.annotations.Document;import org.springframework.data.elasticsearch.annotations.Field;import org.springframework.data.elasticsearch.annotations.FieldType;import java.nio.file.attribute.FileTime;/** * &lt;p&gt; ElasticSearchModel &lt;/p&gt; * &lt;p&gt; Description : ElasticSearchModel &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-07-25 10:27 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Data@ToString@AllArgsConstructor@NoArgsConstructor@Document(indexName = \"test\", type = \"elasticsearch\", refreshInterval = \"1s\")public class ElasticSearchModel &#123; @Id private Long id; private String title; @Field(type = FieldType.Auto, index = true, store = true) private String context;&#125; @Document相当于Hibernate实体的@Entity/@Table(必写) 类型 属性名 默认值 描述 String indexName 无 索引库的名称，建议以项目的名称命名 String type “” 类型,建议以实体的名称命名 short shards 5 默认分区数 short replica 1 每个分区默认的备份数 String refreshInterval 1s 刷新间隔 String indexStoreType fs 索引文件存储类型 @Id相当于Hibernate实体的主键@Id注解(必写) @Field(相当于Hibernate实体的@Column注解),@Field默认是可以不加的,默认所有属性都会添加到ES中 类型 属性名 默认值 说明 FileType type FieldType.Auto 自动检测属性的类型 FileType index FieldIndex.analyzed 默认情况下分词 boolean store false 默认情况下不存储原文 String searchAnalyzer “” 指定字段搜索时使用的分词器 String indexAnalyzer “” 指定字段建立索引时指定的分词器 String[] ignoreFields {} 如果某个字段需要被忽略 在/src/main/java/com/edurt/sli/slide目录下创建repository目录,并在该目录下新建ElasticSearchSupport文件 12345678910111213141516171819202122232425262728293031323334/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slide.repository;import com.edurt.sli.slide.model.ElasticSearchModel;import org.springframework.data.elasticsearch.repository.ElasticsearchRepository;import org.springframework.stereotype.Repository;/** * &lt;p&gt; ElasticSearchSupport &lt;/p&gt; * &lt;p&gt; Description : ElasticSearchSupport &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-07-25 10:36 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@Repositorypublic interface ElasticSearchSupport extends ElasticsearchRepository&lt;ElasticSearchModel, Long&gt; &#123;&#125; 在ElasticsearchRepository中提供了一些基础的增删改查以及分页的功能. 测试增删改查的功能 在/src/main/java/com/edurt/sli/slide目录下创建controller目录,并在该目录下新建ElasticSearchController文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * \"License\"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * &lt;p&gt; * http://www.apache.org/licenses/LICENSE-2.0 * &lt;p&gt; * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.edurt.sli.slide.controller;import com.edurt.sli.slide.model.ElasticSearchModel;import com.edurt.sli.slide.repository.ElasticSearchSupport;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;/** * &lt;p&gt; ElasticSearchController &lt;/p&gt; * &lt;p&gt; Description : ElasticSearchController &lt;/p&gt; * &lt;p&gt; Author : qianmoQ &lt;/p&gt; * &lt;p&gt; Version : 1.0 &lt;/p&gt; * &lt;p&gt; Create Time : 2019-07-25 10:39 &lt;/p&gt; * &lt;p&gt; Author Email: &lt;a href=\"mailTo:shichengoooo@163.com\"&gt;qianmoQ&lt;/a&gt; &lt;/p&gt; */@RestController@RequestMapping(value = \"elasticsearch\")public class ElasticSearchController &#123; @Autowired private ElasticSearchSupport support; @GetMapping public Object get() &#123; return this.support.findAll(); &#125; @PostMapping public Object post(@RequestBody ElasticSearchModel mode) &#123; return this.support.save(mode); &#125; @PutMapping public Object put(@RequestBody ElasticSearchModel mode) &#123; return this.support.save(mode); &#125; @DeleteMapping public Object delete(@RequestParam String id) &#123; this.support.deleteById(Long.valueOf(id)); return \"SUCCESS\"; &#125;&#125; 添加数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X POST http://localhost:8080/elasticsearch -H 'Content-Type:application/json' -d '&#123;\"title\": \"Hello ElasticSearch\", \"context\": \"我是SpringBoot整合ElasticSearch示例\"&#125;'&#123;\"id\":null,\"title\":\"Hello ElasticSearch\",\"context\":\"我是SpringBoot整合ElasticSearch示例\"&#125;⏎ 修改数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X PUT http://localhost:8080/elasticsearch -H 'Content-Type:application/json' -d '&#123;\"id\": 1,\"title\": \"Hello ElasticSearch\", \"context\": \"我是SpringBoot整合ElasticSearch示例,Modfiy\"&#125;'&#123;\"id\":1,\"title\":\"Hello ElasticSearch\",\"context\":\"我是SpringBoot整合ElasticSearch示例,Modfiy\"&#125;⏎ 获取数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X GET http://localhost:8080/elasticsearch&#123;\"content\":[&#123;\"id\":null,\"title\":\"Hello ElasticSearch\",\"context\":\"我是SpringBoot整合ElasticSearch示例,Modfiy\"&#125;,&#123;\"id\":1,\"title\":\"Hello ElasticSearch\",\"context\":\"我是SpringBoot整合ElasticSearch示例,Modfiy\"&#125;],\"pageable\":&#123;\"sort\":&#123;\"sorted\":false,\"unsorted\":true&#125;,\"offset\":0,\"pageSize\":2,\"pageNumber\":0,\"paged\":true,\"unpaged\":false&#125;,\"facets\":[],\"aggregations\":null,\"scrollId\":null,\"totalElements\":2,\"totalPages\":1,\"size\":2,\"number\":0,\"numberOfElements\":2,\"first\":true,\"sort\":&#123;\"sorted\":false,\"unsorted\":true&#125;,\"last\":true&#125;⏎ 删除数据 12shicheng@shichengdeMacBook-Pro ~&gt; curl -X DELETE 'http://localhost:8080/elasticsearch?id=1'SUCCESS⏎ 打包文件部署 打包数据 1mvn clean package -Dmaven.test.skip=true -X 运行打包后的文件即可 1java -jar target/spring-learn-integration-datajpa-elasticsearch-1.0.0.jar 源码地址 GitHub Gitee","categories":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/categories/DataJPA/"}],"tags":[{"name":"DataJPA","slug":"DataJPA","permalink":"https://learn-spring.incubator.edurt.io/tags/DataJPA/"},{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://learn-spring.incubator.edurt.io/tags/ElasticSearch/"}]},{"title":"示例","slug":"example/index","date":"2020-05-07T13:00:58.000Z","updated":"2020-05-08T02:40:39.787Z","comments":true,"path":"2020/05/07/example/index.html","link":"","permalink":"https://learn-spring.incubator.edurt.io/2020/05/07/example/index.html","excerpt":"","text":"这是示例文章…","categories":[{"name":"example","slug":"example","permalink":"https://learn-spring.incubator.edurt.io/categories/example/"}],"tags":[{"name":"示例","slug":"示例","permalink":"https://learn-spring.incubator.edurt.io/tags/%E7%A4%BA%E4%BE%8B/"}]}]}